TYPE
  _INSTANCE_ID_TYPE : INT(-1..20) := -1;
END_TYPE

INTERFACE ITF
END_INTERFACE

CLASS A IMPLEMENTS ITF
  VAR
    b1 : B;
    b2 : B;
    c1 : C;
    c2 : C;
    _INSTANCE_ID : _INSTANCE_ID_TYPE := -1;
  END_VAR
END_CLASS

CLASS A1 EXTENDS A
  VAR
    _INSTANCE_ID : _INSTANCE_ID_TYPE := -1;
  END_VAR
END_CLASS

CLASS A2 EXTENDS A
  VAR
    _INSTANCE_ID : _INSTANCE_ID_TYPE := -1;
  END_VAR
END_CLASS

CLASS B IMPLEMENTS ITF
  VAR
    c1 : C;
    c2 : C;
    _INSTANCE_ID : _INSTANCE_ID_TYPE := -1;
  END_VAR
END_CLASS

CLASS C
  VAR
    _INSTANCE_ID : _INSTANCE_ID_TYPE := -1;
  END_VAR
END_CLASS

GVL
  VAR_GLOBAL
    _INSTANCES_A : ARRAY [0..1] OF A := [
      (_INSTANCE_ID := 0, b1 := 2, b2 := 3, c1 := 11, c2 := 12),
      (_INSTANCE_ID := 1, b1 := 4, b2 := 5, c1 := 17, c2 := 18)
    ];
    _INSTANCES_A1 : ARRAY [1..1] OF A1 := [
      (_INSTANCE_ID := 1)
    ];
    _INSTANCES_B : ARRAY [14..18] OF B := [
      (_INSTANCE_ID := 14, c1 := 0, c2 := 1),
      (_INSTANCE_ID := 15, c1 := 2, c2 := 3),
      (_INSTANCE_ID := 16, c1 := 6, c2 := 7),
      (_INSTANCE_ID := 17, c1 := 8, c2 := 9),
      (_INSTANCE_ID := 18, c1 := 12, c2 := 13)
    ];
    _INSTANCES_C : ARRAY [0..13] OF C := [
      (_INSTANCE_ID := 0),
      (_INSTANCE_ID := 1),
      (_INSTANCE_ID := 2),
      (_INSTANCE_ID := 3),
      (_INSTANCE_ID := 4),
      (_INSTANCE_ID := 5),
      (_INSTANCE_ID := 6),
      (_INSTANCE_ID := 7),
      (_INSTANCE_ID := 8),
      (_INSTANCE_ID := 9),
      (_INSTANCE_ID := 10),
      (_INSTANCE_ID := 11),
      (_INSTANCE_ID := 12),
      (_INSTANCE_ID := 13)
    ];
  END_VAR
END_GVL

PROGRAM MY_PROGRAM
  VAR_INPUT
    switch : BOOL;
  END_VAR
  VAR
    i : ITF;
    a : A;
    a1 : A1;
    b : B;
    r : REF_TO A;
  END_VAR

  r := REF(a);

  IF (switch) THEN
    i := a;
  ELSE
    i := b;
  END_IF

  r^.c1 := a.b1.c1;
  r^.c2 := a.b2.c2;

  r^.b1.c2 := r^.c2;
END_PROGRAM
