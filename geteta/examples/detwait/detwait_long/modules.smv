MODULE main
IVAR
	i : signed word[16];
-- end of IVAR
VAR
	code : dw(i);
	table : TTable(i, next(code.o));
-- end of VAR

-- end of module main

MODULE TTable(i, o)
VAR
	s_2_1 : boolean;
	s_3_1 : boolean;
	s_4_1 : boolean;
	s_5_1 : boolean;
	s_6_1 : boolean;
	s_7_1 : boolean;
	s_8_1 : boolean;
	s_9_1 : boolean;
	_$ERROR : boolean;
	_$SENTINEL : boolean;
-- end of VAR
DEFINE
	s2_fail := s2_in & !s2_out;
	s2_fwd := s2_in & s2_out;
	s2_in := i != 0sd16_0;
	s2_keep := !s3_in & s2_in & s2_out;
	s2_out := TRUE;
	s3_fail := s3_in & !s3_out;
	s3_fwd := s3_in & s3_out;
	s3_in := 0sd16_0 = i;
	s3_out := 0sd16_0 = o;
	s4_fail := s4_in & !s4_out;
	s4_fwd := s4_in & s4_out;
	s4_in := 0sd16_1 = i;
	s4_out := 0sd16_1 = o;
	s5_fail := s5_in & !s5_out;
	s5_fwd := s5_in & s5_out;
	s5_in := 0sd16_3 = i;
	s5_out := 0sd16_2 = o;
	s6_fail := s6_in & !s6_out;
	s6_fwd := s6_in & s6_out;
	s6_in := 0sd16_5 = i;
	s6_out := 0sd16_3 = o;
	s7_fail := s7_in & !s7_out;
	s7_fwd := s7_in & s7_out;
	s7_in := 0sd16_999 = i;
	s7_out := 0sd16_4 = o;
	s8_fail := s8_in & !s8_out;
	s8_fwd := s8_in & s8_out;
	s8_in := 0sd16_10002 = i;
	s8_out := 0sd16_5 = o;
	s9_fail := s9_in & !s9_out;
	s9_fwd := s9_in & s9_out;
	s9_in := 0sd16_6602 = i;
	s9_out := 0sd16_6 = o;
	s_2_1_fail := s_2_1 & s2_fail;
	s_2_1_fwd := s_2_1 & s2_fwd;
	s_3_1_fail := s_3_1 & s3_fail;
	s_3_1_fwd := s_3_1 & s3_fwd;
	s_4_1_fail := s_4_1 & s4_fail;
	s_4_1_fwd := s_4_1 & s4_fwd;
	s_5_1_fail := s_5_1 & s5_fail;
	s_5_1_fwd := s_5_1 & s5_fwd;
	s_6_1_fail := s_6_1 & s6_fail;
	s_6_1_fwd := s_6_1 & s6_fwd;
	s_7_1_fail := s_7_1 & s7_fail;
	s_7_1_fwd := s_7_1 & s7_fwd;
	s_8_1_fail := s_8_1 & s8_fail;
	s_8_1_fwd := s_8_1 & s8_fwd;
	s_9_1_fail := s_9_1 & s9_fail;
	s_9_1_fwd := s_9_1 & s9_fwd;
LTLSPEC
	(G(F(s3_in))) -> (F(!s_2_1 & !s_3_1 & !s_4_1 & !s_5_1 & !s_6_1 & !s_7_1 & !s_8_1 & !s_9_1 & !_$ERROR | s_9_1_fwd));

INVARSPEC
	_$ERROR -> s_2_1 | s_3_1 | s_4_1 | s_5_1 | s_6_1 | s_7_1 | s_8_1 | s_9_1 | _$SENTINEL;

INIT
	s_2_1 & !s_3_1 & !s_4_1 & !s_5_1 & !s_6_1 & !s_7_1 & !s_8_1 & !s_9_1 & !_$ERROR & !_$SENTINEL;
ASSIGN
	next(s_2_1) := FALSE | s_2_1 & s2_keep;
	next(s_3_1) := s_2_1_fwd;
	next(s_4_1) := s_3_1_fwd;
	next(s_5_1) := s_4_1_fwd;
	next(s_6_1) := s_5_1_fwd;
	next(s_7_1) := s_6_1_fwd;
	next(s_8_1) := s_7_1_fwd;
	next(s_9_1) := s_8_1_fwd;
	next(_$ERROR) := s_2_1_fail | s_3_1_fail | s_4_1_fail | s_5_1_fail | s_6_1_fail | s_7_1_fail | s_8_1_fail | s_9_1_fail;
	next(_$SENTINEL) := s_9_1_fwd | _$SENTINEL;

-- end of module TTable

MODULE dw(i)
VAR
	s : signed word[16];
	o : signed word[16];
-- end of VAR
ASSIGN
	init(s) := 0sd16_0;
	init(o) := 0sd16_0;
	next(s) := case 
i = 0sd16_0 : 0sd16_0; i > 0sd16_0 : s + 0sd16_1; TRUE : s; 
esac;
	next(o) := case 
i = 0sd16_0 : 0sd16_0; i > 0sd16_0 : s + 0sd16_1; TRUE : s; 
esac;

-- end of module dw

