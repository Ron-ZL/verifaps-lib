MODULE main
IVAR
	I : signed word[16];
	learn : boolean;
	mode : {ACTIVE, LEARN};
-- end of IVAR
VAR
	code$ : MinMax(I, learn, mode);
	tableModule : table(code$.mode, code$.learn, code$.I, next(code$.Q), next(code$.W));
-- end of VAR
DEFINE

-- end of module main
MODULE table(code$mode, code$learn, code$I, code$Q, code$W)
FROZENVAR
	p : signed word[16];
	q : signed word[16];
-- end of FROZENVAR
VAR
	__ERROR__ : boolean;
	__SENTINEL__ : boolean;
	r01_01 : boolean;
	r03_01 : boolean;
	r04_01 : boolean;
	r07_01 : boolean;
	r09_01 : boolean;
	r09_02 : boolean;
	r09_03 : boolean;
	r09_04 : boolean;
	r09_05 : boolean;
	r09_06 : boolean;
	r09_07 : boolean;
	r09_08 : boolean;
	r09_09 : boolean;
	r09_10 : boolean;
	r10_01 : boolean;
	r12_01 : boolean;
	r12_02 : boolean;
	r12_03 : boolean;
	r12_04 : boolean;
	r12_05 : boolean;
	r13_01 : boolean;
	r15_01 : boolean;
	r15_02 : boolean;
	r15_03 : boolean;
	r15_04 : boolean;
	r15_05 : boolean;
	r15_06 : boolean;
	r15_07 : boolean;
	r15_08 : boolean;
	r15_09 : boolean;
	r15_10 : boolean;
	r16_01 : boolean;
	r18_01 : boolean;
	r18_02 : boolean;
	r18_03 : boolean;
	r18_04 : boolean;
	r18_05 : boolean;
	r19_01 : boolean;
-- end of VAR
DEFINE
	r01_out_Q := 0sd16_1 != 0sd16_2;
	r01_out_W := FALSE = code$W;
	r01_out := r01_out_Q & r01_out_W;
	r01_in_mode := ACTIVE = code$mode;
	r01_in_I := TRUE;
	r01_in_learn := TRUE;
	r01_in := r01_in_mode & r01_in_I & r01_in_learn;
	r01_progress := r01_fwd & !FALSE;
	r01_fail := r01_in & !r01_out;
	r01_fwd := r01_in & r01_out;
	r03_out_Q := 0sd16_0 = code$Q;
	r03_out_W := FALSE = code$W;
	r03_out := r03_out_Q & r03_out_W;
	r03_in_mode := LEARN = code$mode;
	r03_in_I := TRUE;
	r03_in_learn := FALSE = code$learn;
	r03_in := r03_in_mode & r03_in_I & r03_in_learn;
	r03_progress := r03_fwd & !FALSE;
	r03_fail := r03_in & !r03_out;
	r03_fwd := r03_in & r03_out;
	r04_out_Q := p <= code$Q & code$Q <= q;
	r04_out_W := FALSE = code$W;
	r04_out := r04_out_Q & r04_out_W;
	r04_in_mode := LEARN = code$mode;
	r04_in_I := p <= code$I & code$I <= q;
	r04_in_learn := TRUE = code$learn;
	r04_in := r04_in_mode & r04_in_I & r04_in_learn;
	r04_progress := r04_fwd & !FALSE;
	r04_fail := r04_in & !r04_out;
	r04_fwd := r04_in & r04_out;
	r07_out_Q := p <= code$Q & code$Q <= q;
	r07_out_W := FALSE = code$W;
	r07_out := r07_out_Q & r07_out_W;
	r07_in_mode := ACTIVE = code$mode;
	r07_in_I := p <= code$I & code$I <= q;
	r07_in_learn := TRUE;
	r07_in := r07_in_mode & r07_in_I & r07_in_learn;
	r07_progress := r07_fwd & !FALSE;
	r07_fail := r07_in & !r07_out;
	r07_fwd := r07_in & r07_out;
	r09_out_Q := code$Q <= q;
	r09_out_W := FALSE = code$W;
	r09_out := r09_out_Q & r09_out_W;
	r09_in_mode := ACTIVE = code$mode;
	r09_in_I := code$I > q;
	r09_in_learn := TRUE;
	r09_in := r09_in_mode & r09_in_I & r09_in_learn;
	r09_progress := r09_fwd & !FALSE;
	r09_fail := r09_in & !r09_out;
	r09_fwd := r09_in & r09_out;
	r10_out_Q := code$Q <= q;
	r10_out_W := TRUE = code$W;
	r10_out := r10_out_Q & r10_out_W;
	r10_in_mode := ACTIVE = code$mode;
	r10_in_I := code$I > q;
	r10_in_learn := TRUE;
	r10_in := r10_in_mode & r10_in_I & r10_in_learn;
	r10_progress := r10_fwd & !FALSE;
	r10_fail := r10_in & !r10_out;
	r10_fwd := r10_in & r10_out;
	r12_out_Q := p <= code$Q & code$Q <= q;
	r12_out_W := TRUE = code$W;
	r12_out := r12_out_Q & r12_out_W;
	r12_in_mode := ACTIVE = code$mode;
	r12_in_I := p <= code$I & code$I <= q;
	r12_in_learn := TRUE;
	r12_in := r12_in_mode & r12_in_I & r12_in_learn;
	r12_progress := r12_fwd & !FALSE;
	r12_fail := r12_in & !r12_out;
	r12_fwd := r12_in & r12_out;
	r13_out_Q := p <= code$Q & code$Q <= q;
	r13_out_W := FALSE = code$W;
	r13_out := r13_out_Q & r13_out_W;
	r13_in_mode := ACTIVE = code$mode;
	r13_in_I := p <= code$I & code$I <= q;
	r13_in_learn := TRUE;
	r13_in := r13_in_mode & r13_in_I & r13_in_learn;
	r13_progress := r13_fwd & !FALSE;
	r13_fail := r13_in & !r13_out;
	r13_fwd := r13_in & r13_out;
	r15_out_Q := code$Q >= p;
	r15_out_W := TRUE = code$W;
	r15_out := r15_out_Q & r15_out_W;
	r15_in_mode := ACTIVE = code$mode;
	r15_in_I := code$I < p;
	r15_in_learn := TRUE;
	r15_in := r15_in_mode & r15_in_I & r15_in_learn;
	r15_progress := r15_fwd & !FALSE;
	r15_fail := r15_in & !r15_out;
	r15_fwd := r15_in & r15_out;
	r16_out_Q := code$Q >= p;
	r16_out_W := TRUE = code$W;
	r16_out := r16_out_Q & r16_out_W;
	r16_in_mode := ACTIVE = code$mode;
	r16_in_I := code$I < p;
	r16_in_learn := TRUE;
	r16_in := r16_in_mode & r16_in_I & r16_in_learn;
	r16_progress := r16_fwd & !FALSE;
	r16_fail := r16_in & !r16_out;
	r16_fwd := r16_in & r16_out;
	r18_out_Q := p <= code$Q & code$Q <= q;
	r18_out_W := TRUE = code$W;
	r18_out := r18_out_Q & r18_out_W;
	r18_in_mode := ACTIVE = code$mode;
	r18_in_I := p <= code$I & code$I <= q;
	r18_in_learn := TRUE;
	r18_in := r18_in_mode & r18_in_I & r18_in_learn;
	r18_progress := r18_fwd & !FALSE;
	r18_fail := r18_in & !r18_out;
	r18_fwd := r18_in & r18_out;
	r19_out_Q := p <= code$Q & code$Q <= q;
	r19_out_W := FALSE = code$W;
	r19_out := r19_out_Q & r19_out_W;
	r19_in_mode := ACTIVE = code$mode;
	r19_in_I := p <= code$I & code$I <= q;
	r19_in_learn := TRUE;
	r19_in := r19_in_mode & r19_in_I & r19_in_learn;
	r19_progress := r19_fwd & !FALSE;
	r19_fail := r19_in & !r19_out;
	r19_fwd := r19_in & r19_out;
	r10_01_accept := r10_01 & r10_fwd;
	r10_01_fail := r10_01 & r10_fail;
	r10_01_acceptp := r10_01_accept & !r10_progress;
	r01_01_accept := r01_01 & r01_fwd;
	r01_01_fail := r01_01 & r01_fail;
	r01_01_acceptp := r01_01_accept & !r01_progress;
	r12_01_accept := r12_01 & r12_fwd;
	r12_01_fail := r12_01 & r12_fail;
	r12_01_acceptp := r12_01_accept & !r12_progress;
	r12_02_accept := r12_02 & r12_fwd;
	r12_02_fail := r12_02 & r12_fail;
	r12_02_acceptp := r12_02_accept & !r12_progress;
	r12_03_accept := r12_03 & r12_fwd;
	r12_03_fail := r12_03 & r12_fail;
	r12_03_acceptp := r12_03_accept & !r12_progress;
	r12_04_accept := r12_04 & r12_fwd;
	r12_04_fail := r12_04 & r12_fail;
	r12_04_acceptp := r12_04_accept & !r12_progress;
	r12_05_accept := r12_05 & r12_fwd;
	r12_05_fail := r12_05 & r12_fail;
	r12_05_acceptp := r12_05_accept & !r12_progress;
	r03_01_accept := r03_01 & r03_fwd;
	r03_01_fail := r03_01 & r03_fail;
	r03_01_acceptp := r03_01_accept & !r03_progress;
	r13_01_accept := r13_01 & r13_fwd;
	r13_01_fail := r13_01 & r13_fail;
	r13_01_acceptp := r13_01_accept & !r13_progress;
	r16_01_accept := r16_01 & r16_fwd;
	r16_01_fail := r16_01 & r16_fail;
	r16_01_acceptp := r16_01_accept & !r16_progress;
	r04_01_accept := r04_01 & r04_fwd;
	r04_01_fail := r04_01 & r04_fail;
	r04_01_acceptp := r04_01_accept & !r04_progress;
	r15_01_accept := r15_01 & r15_fwd;
	r15_01_fail := r15_01 & r15_fail;
	r15_01_acceptp := r15_01_accept & !r15_progress;
	r15_02_accept := r15_02 & r15_fwd;
	r15_02_fail := r15_02 & r15_fail;
	r15_02_acceptp := r15_02_accept & !r15_progress;
	r15_03_accept := r15_03 & r15_fwd;
	r15_03_fail := r15_03 & r15_fail;
	r15_03_acceptp := r15_03_accept & !r15_progress;
	r15_04_accept := r15_04 & r15_fwd;
	r15_04_fail := r15_04 & r15_fail;
	r15_04_acceptp := r15_04_accept & !r15_progress;
	r15_05_accept := r15_05 & r15_fwd;
	r15_05_fail := r15_05 & r15_fail;
	r15_05_acceptp := r15_05_accept & !r15_progress;
	r15_06_accept := r15_06 & r15_fwd;
	r15_06_fail := r15_06 & r15_fail;
	r15_06_acceptp := r15_06_accept & !r15_progress;
	r15_07_accept := r15_07 & r15_fwd;
	r15_07_fail := r15_07 & r15_fail;
	r15_07_acceptp := r15_07_accept & !r15_progress;
	r15_08_accept := r15_08 & r15_fwd;
	r15_08_fail := r15_08 & r15_fail;
	r15_08_acceptp := r15_08_accept & !r15_progress;
	r15_09_accept := r15_09 & r15_fwd;
	r15_09_fail := r15_09 & r15_fail;
	r15_09_acceptp := r15_09_accept & !r15_progress;
	r15_10_accept := r15_10 & r15_fwd;
	r15_10_fail := r15_10 & r15_fail;
	r15_10_acceptp := r15_10_accept & !r15_progress;
	r07_01_accept := r07_01 & r07_fwd;
	r07_01_fail := r07_01 & r07_fail;
	r07_01_acceptp := r07_01_accept & !r07_progress;
	r18_01_accept := r18_01 & r18_fwd;
	r18_01_fail := r18_01 & r18_fail;
	r18_01_acceptp := r18_01_accept & !r18_progress;
	r18_02_accept := r18_02 & r18_fwd;
	r18_02_fail := r18_02 & r18_fail;
	r18_02_acceptp := r18_02_accept & !r18_progress;
	r18_03_accept := r18_03 & r18_fwd;
	r18_03_fail := r18_03 & r18_fail;
	r18_03_acceptp := r18_03_accept & !r18_progress;
	r18_04_accept := r18_04 & r18_fwd;
	r18_04_fail := r18_04 & r18_fail;
	r18_04_acceptp := r18_04_accept & !r18_progress;
	r18_05_accept := r18_05 & r18_fwd;
	r18_05_fail := r18_05 & r18_fail;
	r18_05_acceptp := r18_05_accept & !r18_progress;
	r09_01_accept := r09_01 & r09_fwd;
	r09_01_fail := r09_01 & r09_fail;
	r09_01_acceptp := r09_01_accept & !r09_progress;
	r09_02_accept := r09_02 & r09_fwd;
	r09_02_fail := r09_02 & r09_fail;
	r09_02_acceptp := r09_02_accept & !r09_progress;
	r09_03_accept := r09_03 & r09_fwd;
	r09_03_fail := r09_03 & r09_fail;
	r09_03_acceptp := r09_03_accept & !r09_progress;
	r09_04_accept := r09_04 & r09_fwd;
	r09_04_fail := r09_04 & r09_fail;
	r09_04_acceptp := r09_04_accept & !r09_progress;
	r09_05_accept := r09_05 & r09_fwd;
	r09_05_fail := r09_05 & r09_fail;
	r09_05_acceptp := r09_05_accept & !r09_progress;
	r09_06_accept := r09_06 & r09_fwd;
	r09_06_fail := r09_06 & r09_fail;
	r09_06_acceptp := r09_06_accept & !r09_progress;
	r09_07_accept := r09_07 & r09_fwd;
	r09_07_fail := r09_07 & r09_fail;
	r09_07_acceptp := r09_07_accept & !r09_progress;
	r09_08_accept := r09_08 & r09_fwd;
	r09_08_fail := r09_08 & r09_fail;
	r09_08_acceptp := r09_08_accept & !r09_progress;
	r09_09_accept := r09_09 & r09_fwd;
	r09_09_fail := r09_09 & r09_fail;
	r09_09_acceptp := r09_09_accept & !r09_progress;
	r09_10_accept := r09_10 & r09_fwd;
	r09_10_fail := r09_10 & r09_fail;
	r09_10_acceptp := r09_10_accept & !r09_progress;
	r19_01_accept := r19_01 & r19_fwd;
	r19_01_fail := r19_01 & r19_fail;
	r19_01_acceptp := r19_01_accept & !r19_progress;
INVARSPEC
	__ERROR__ -> r10_01 | r01_01 | r12_01 | r12_02 | r12_03 | r12_04 | r12_05 | r03_01 | r13_01 | r16_01 | r04_01 | r15_01 | r15_02 | r15_03 | r15_04 | r15_05 | r15_06 | r15_07 | r15_08 | r15_09 | r15_10 | r07_01 | r18_01 | r18_02 | r18_03 | r18_04 | r18_05 | r09_01 | r09_02 | r09_03 | r09_04 | r09_05 | r09_06 | r09_07 | r09_08 | r09_09 | r09_10 | r19_01 | __SENTINEL__;

INIT
	!r10_01 & r01_01 & !r12_01 & !r12_02 & !r12_03 & !r12_04 & !r12_05 & !r03_01 & !r13_01 & !r16_01 & !r04_01 & !r15_01 & !r15_02 & !r15_03 & !r15_04 & !r15_05 & !r15_06 & !r15_07 & !r15_08 & !r15_09 & !r15_10 & !r07_01 & !r18_01 & !r18_02 & !r18_03 & !r18_04 & !r18_05 & !r09_01 & !r09_02 & !r09_03 & !r09_04 & !r09_05 & !r09_06 & !r09_07 & !r09_08 & !r09_09 & !r09_10 & !r19_01 & !__ERROR__ & !__SENTINEL__ & 0sd16_0 = p & 0sd16_5 = q;
ASSIGN
	next(__ERROR__) := r01_01_fail | r03_01_fail | r04_01_fail | r07_01_fail | r09_01_fail | r09_02_fail | r09_03_fail | r09_04_fail | r09_05_fail | r09_06_fail | r09_07_fail | r09_08_fail | r09_09_fail | r09_10_fail | r10_01_fail | r12_01_fail | r12_02_fail | r12_03_fail | r12_04_fail | r12_05_fail | r13_01_fail | r15_01_fail | r15_02_fail | r15_03_fail | r15_04_fail | r15_05_fail | r15_06_fail | r15_07_fail | r15_08_fail | r15_09_fail | r15_10_fail | r16_01_fail | r18_01_fail | r18_02_fail | r18_03_fail | r18_04_fail | r18_05_fail | r19_01_fail;
	next(__SENTINEL__) := r19_01_accept | __SENTINEL__;
	next(r01_01) := r01_01_accept;
	next(r03_01) := r01_01_accept | r04_01_accept | r03_01_accept;
	next(r04_01) := r03_01_accept | r04_01_accept;
	next(r07_01) := r04_01_accept | r19_01_accept | r07_01_accept;
	next(r09_01) := r04_01_accept | r07_01_accept | r19_01_accept;
	next(r09_02) := r09_01_accept;
	next(r09_03) := r09_02_accept;
	next(r09_04) := r09_03_accept;
	next(r09_05) := r09_04_accept;
	next(r09_06) := r09_05_accept;
	next(r09_07) := r09_06_accept;
	next(r09_08) := r09_07_accept;
	next(r09_09) := r09_08_accept;
	next(r09_10) := r09_09_accept;
	next(r10_01) := r09_10_accept | r10_01_accept;
	next(r12_01) := r10_01_accept;
	next(r12_02) := r12_01_accept;
	next(r12_03) := r12_02_accept;
	next(r12_04) := r12_03_accept;
	next(r12_05) := r12_04_accept;
	next(r13_01) := r12_05_accept | r13_01_accept;
	next(r15_01) := r13_01_accept;
	next(r15_02) := r15_01_accept;
	next(r15_03) := r15_02_accept;
	next(r15_04) := r15_03_accept;
	next(r15_05) := r15_04_accept;
	next(r15_06) := r15_05_accept;
	next(r15_07) := r15_06_accept;
	next(r15_08) := r15_07_accept;
	next(r15_09) := r15_08_accept;
	next(r15_10) := r15_09_accept;
	next(r16_01) := r15_10_accept | r16_01_accept;
	next(r18_01) := r16_01_accept;
	next(r18_02) := r18_01_accept;
	next(r18_03) := r18_02_accept;
	next(r18_04) := r18_03_accept;
	next(r18_05) := r18_04_accept;
	next(r19_01) := r18_05_accept | r19_01_accept;

-- end of module table
MODULE MinMax(I, learn, mode)
VAR
	Q : signed word[16];
	W : boolean;
	WAIT_AFTER_WARNING : signed word[16];
	WAIT_BEFORE_WARNING : signed word[16];
	cntHeat : signed word[16];
	cntQuench : signed word[16];
	lower : signed word[16];
	upper : signed word[16];
-- end of VAR
DEFINE
ASSIGN
	init(Q) := 0sd16_0;
	init(W) := FALSE;
	init(WAIT_AFTER_WARNING) := 0sd16_3;
	init(WAIT_BEFORE_WARNING) := 0sd16_3;
	init(cntHeat) := 0sd16_3;
	init(cntQuench) := 0sd16_3;
	init(lower) := 0sd16_32766;
	init(upper) := -0sd16_32767;
	next(Q) := case 
mode = LEARN : 0sd16_0; TRUE : case 
upper < lower : 0sd16_0; TRUE : case 
upper <= (case 
lower >= I : lower; TRUE : I; 
esac) : upper; TRUE : case 
lower >= I : lower; TRUE : I; 
esac; 
esac; 
esac; 
esac;
	next(W) := case 
mode = LEARN : FALSE; TRUE : case 
upper < lower : TRUE; TRUE : case 
I != (case 
upper <= (case 
lower >= I : lower; TRUE : I; 
esac) : upper; TRUE : case 
lower >= I : lower; TRUE : I; 
esac; 
esac) : case 
cntHeat - 0sd16_1 = 0sd16_0 : TRUE; TRUE : W; 
esac; TRUE : case 
cntQuench - 0sd16_1 = 0sd16_0 : FALSE; TRUE : W; 
esac; 
esac; 
esac; 
esac;
	next(WAIT_AFTER_WARNING) := WAIT_AFTER_WARNING;
	next(WAIT_BEFORE_WARNING) := WAIT_BEFORE_WARNING;
	next(cntHeat) := case 
mode = LEARN : cntHeat; TRUE : case 
upper < lower : cntHeat; TRUE : case 
I != (case 
upper <= (case 
lower >= I : lower; TRUE : I; 
esac) : upper; TRUE : case 
lower >= I : lower; TRUE : I; 
esac; 
esac) : cntHeat - 0sd16_1; TRUE : WAIT_BEFORE_WARNING; 
esac; 
esac; 
esac;
	next(cntQuench) := case 
mode = LEARN : cntQuench; TRUE : case 
upper < lower : cntQuench; TRUE : case 
I != (case 
upper <= (case 
lower >= I : lower; TRUE : I; 
esac) : upper; TRUE : case 
lower >= I : lower; TRUE : I; 
esac; 
esac) : WAIT_AFTER_WARNING; TRUE : cntQuench - 0sd16_1; 
esac; 
esac; 
esac;
	next(lower) := case 
mode = LEARN : case 
learn : case 
lower <= I : lower; TRUE : I; 
esac; TRUE : lower; 
esac; TRUE : lower; 
esac;
	next(upper) := case 
mode = LEARN : case 
learn : case 
upper >= I : upper; TRUE : I; 
esac; TRUE : upper; 
esac; TRUE : upper; 
esac;

-- end of module MinMax
