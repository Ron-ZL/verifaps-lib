*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

nuXmv > nuXmv > nuXmv > Number of Input Variables: 1
    1: signed word[16]
Number of State Variables: 24
   22: boolean
    2: signed word[16]
Number of Frozen Variables: 0
  i : signed word[16]
  
  code.c : signed word[16]
  
  code.o : signed word[16]
  
  table.s1_1 : boolean
  
  table.s1_2 : boolean
  
  table.s1_3 : boolean
  
  table.s1_4 : boolean
  
  table.s1_5 : boolean
  
  table.s1_6 : boolean
  
  table.s1_7 : boolean
  
  table.s1_8 : boolean
  
  table.s1_9 : boolean
  
  table.s1_10 : boolean
  
  table.s2_1 : boolean
  
  table.s2_2 : boolean
  
  table.s2_3 : boolean
  
  table.s2_4 : boolean
  
  table.s2_5 : boolean
  
  table.s2_6 : boolean
  
  table.s2_7 : boolean
  
  table.s2_8 : boolean
  
  table.s2_9 : boolean
  
  table.s2_10 : boolean
  
  table._$ERROR : boolean
  
  table._$SENTINEL : boolean
  
Number of bits: 70 (0 frozen, 16 input, 54 state)
nuXmv > nuXmv > nuXmv > -- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- invariant (_$ERROR -> ((((((((((((((((((((s1_1 | s1_2) | s1_3) | s1_4) | s1_5) | s1_6) | s1_7) | s1_8) | s1_9) | s1_10) | s2_1) | s2_2) | s2_3) | s2_4) | s2_5) | s2_6) | s2_7) | s2_8) | s2_9) | s2_10) | _$SENTINEL)) IN table is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    table.s1_1 = TRUE
    table.s1_2 = FALSE
    table.s1_3 = FALSE
    table.s1_4 = FALSE
    table.s1_5 = FALSE
    table.s1_6 = FALSE
    table.s1_7 = FALSE
    table.s1_8 = FALSE
    table.s1_9 = FALSE
    table.s1_10 = FALSE
    table.s2_1 = FALSE
    table.s2_2 = FALSE
    table.s2_3 = FALSE
    table.s2_4 = FALSE
    table.s2_5 = FALSE
    table.s2_6 = FALSE
    table.s2_7 = FALSE
    table.s2_8 = FALSE
    table.s2_9 = FALSE
    table.s2_10 = FALSE
    table._$SENTINEL = FALSE
    table._$ERROR = FALSE
    code.c = 0sd16_0
    code.o = 0sd16_0
    table.s2_in = TRUE
    table.s1_in = TRUE
    table.s2_out = FALSE
    table.s2_fwd = FALSE
    table.s2_fail = TRUE
    table.s1_out = TRUE
    table.s1_fwd = TRUE
    table.s1_fail = FALSE
    table.s_2_9_fwd = FALSE
    table.s_2_9_fail = FALSE
    table.s_2_8_fwd = FALSE
    table.s_2_8_fail = FALSE
    table.s_2_7_fwd = FALSE
    table.s_2_7_fail = FALSE
    table.s_2_6_fwd = FALSE
    table.s_2_6_fail = FALSE
    table.s_2_5_fwd = FALSE
    table.s_2_5_fail = FALSE
    table.s_2_4_fwd = FALSE
    table.s_2_4_fail = FALSE
    table.s_2_3_fwd = FALSE
    table.s_2_3_fail = FALSE
    table.s_2_2_fwd = FALSE
    table.s_2_2_fail = FALSE
    table.s_2_1_fwd = FALSE
    table.s_2_1_fail = FALSE
    table.s_2_10_fwd = FALSE
    table.s_2_10_fail = FALSE
    table.s_1_9_fwd = FALSE
    table.s_1_9_fail = FALSE
    table.s_1_8_fwd = FALSE
    table.s_1_8_fail = FALSE
    table.s_1_7_fwd = FALSE
    table.s_1_7_fail = FALSE
    table.s_1_6_fwd = FALSE
    table.s_1_6_fail = FALSE
    table.s_1_5_fwd = FALSE
    table.s_1_5_fail = FALSE
    table.s_1_4_fwd = FALSE
    table.s_1_4_fail = FALSE
    table.s_1_3_fwd = FALSE
    table.s_1_3_fail = FALSE
    table.s_1_2_fwd = FALSE
    table.s_1_2_fail = FALSE
    table.s_1_1_fwd = TRUE
    table.s_1_1_fail = FALSE
    table.s_1_10_fwd = FALSE
    table.s_1_10_fail = FALSE
  -> Input: 1.2 <-
    i = 0sd16_0
  -> State: 1.2 <-
    table.s1_1 = FALSE
    table.s1_2 = TRUE
    code.c = 0sd16_42
    table.s_1_2_fwd = TRUE
    table.s_1_1_fwd = FALSE
  -> Input: 1.3 <-
  -> State: 1.3 <-
    table.s1_2 = FALSE
    table.s1_3 = TRUE
    table.s_1_3_fwd = TRUE
    table.s_1_2_fwd = FALSE
  -> Input: 1.4 <-
  -> State: 1.4 <-
    table.s1_3 = FALSE
    table.s1_4 = TRUE
    table.s_1_4_fwd = TRUE
    table.s_1_3_fwd = FALSE
  -> Input: 1.5 <-
  -> State: 1.5 <-
    table.s1_4 = FALSE
    table.s1_5 = TRUE
    table.s_1_5_fwd = TRUE
    table.s_1_4_fwd = FALSE
  -> Input: 1.6 <-
  -> State: 1.6 <-
    table.s1_5 = FALSE
    table.s1_6 = TRUE
    table.s_1_6_fwd = TRUE
    table.s_1_5_fwd = FALSE
  -> Input: 1.7 <-
  -> State: 1.7 <-
    table.s1_6 = FALSE
    table.s1_7 = TRUE
    table.s_1_7_fwd = TRUE
    table.s_1_6_fwd = FALSE
  -> Input: 1.8 <-
  -> State: 1.8 <-
    table.s1_7 = FALSE
    table.s1_8 = TRUE
    table.s_1_8_fwd = TRUE
    table.s_1_7_fwd = FALSE
  -> Input: 1.9 <-
  -> State: 1.9 <-
    table.s1_8 = FALSE
    table.s1_9 = TRUE
    table.s_1_9_fwd = TRUE
    table.s_1_8_fwd = FALSE
  -> Input: 1.10 <-
  -> State: 1.10 <-
    table.s1_9 = FALSE
    table.s1_10 = TRUE
    table.s_1_9_fwd = FALSE
    table.s_1_10_fwd = TRUE
  -> Input: 1.11 <-
  -> State: 1.11 <-
    table.s1_10 = FALSE
    table.s2_1 = TRUE
    table.s_2_1_fail = TRUE
    table.s_1_10_fwd = FALSE
  -> Input: 1.12 <-
  -> State: 1.12 <-
    table.s2_1 = FALSE
    table._$ERROR = TRUE
nuXmv > 