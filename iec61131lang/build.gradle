plugins {}

apply plugin: 'antlr'

description = 'iec61131lang'

repositories {
    maven { url "http://dl.bintray.com/jetbrains/spek" }
}

dependencies {
    compile group: 'org.antlr', name: 'antlr4-runtime', version: '4.7.1'
    antlr group: 'org.antlr', name: 'antlr4', version: '4.7.1'

    compile project(':util')
    compile project(':iec-xml')

   /* compile 'io.arrow-kt:arrow-core:0.7.2'
    compile 'io.arrow-kt:arrow-syntax:0.7.2'
    compile 'io.arrow-kt:arrow-typeclasses:0.7.2'
    compile 'io.arrow-kt:arrow-data:0.7.2'
    /*
      compile 'io.arrow-kt:arrow-instances-core:0.7.2'
      compile 'io.arrow-kt:arrow-instances-data:0.7.2'
      kapt    'io.arrow-kt:arrow-annotations-processor:0.7.2'
    compile 'io.arrow-kt:arrow-free:0.7.2' //optional
      compile 'io.arrow-kt:arrow-mtl:0.7.2' //optional
      compile 'io.arrow-kt:arrow-effects:0.7.2' //optional
      compile 'io.arrow-kt:arrow-effects-rx2:0.7.2' //optional
      compile 'io.arrow-kt:arrow-effects-kotlinx-coroutines:0.7.2' //optional
      compile 'io.arrow-kt:arrow-optics:0.7.2' //optional
      compile 'io.arrow-kt:arrow-generic:0.7.2' //optional
      compile 'io.arrow-kt:arrow-recursion:0.7.2' //optional
  */
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor", "-long-messages", "-package", "edu.kit.iti.formal.automation.parser"]
    outputDirectory file("${project.buildDir}/generated-src/antlr/main/edu/kit/iti/formal/automation/parser")
}

compileKotlin.dependsOn << generateGrammarSource

jar {
    def v = versionDetails()
    manifest {
        attributes(
                'version': project.version,
                'lastTag': v.lastTag,
                'commitDistance': v.commitDistance,
                'hash': v.gitHash,
                'hashFull': v.gitHashFull, // full 40-character Git commit hash
                'branchName': v.branchName, // isType null if the repository in detached HEAD mode
                'isClean': v.isCleanTag,
                'buildTime': new Date().toString())
    }
}

test {
    exclude '**/SFCLangParserTest.class'
}