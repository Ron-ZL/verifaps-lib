plugins {
    //    id 'org.junit.platform.gradle.plugin' version '1.0.0'
}

apply plugin: 'antlr'

description = 'iec61131lang'


repositories {
    maven { url "http://dl.bintray.com/jetbrains/spek" }
}


dependencies {
    compile group: 'org.antlr', name: 'antlr4-runtime', version: '4.7.1'
    antlr group: 'org.antlr', name: 'antlr4', version: '4.7.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'

    testCompile 'org.jetbrains.spek:spek-api:1.1.5'
    testRuntime 'org.jetbrains.spek:spek-junit-platform-engine:1.1.5'
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor", "-long-messages", "-package", "edu.kit.iti.formal.automation.parser"]
    outputDirectory file("${project.buildDir}/generated-src/antlr/main/edu/kit/iti/formal/automation/parser")
    println(arguments)
}

compileKotlin.dependsOn << generateGrammarSource

task createVersionFile(type: Copy) {
    def v = versionDetails()
    def map = [
            'version'       : project.version,
            'lastTag'       : v.lastTag,
            'commitDistance': v.commitDistance,
            'hash'          : v.gitHash,
            'hashFull'      : v.gitHashFull, // full 40-character Git commit hash
            'branchName'    : v.branchName, // is null if the repository in detached HEAD mode
            'isClean'       : v.isCleanTag,
            'buildTime'     : new Date().toString(),
    ]
    from("../share/Version.java") {
        expand(map)
    }
    into("${project.buildDir}/generated-src/antlr/main/edu/kit/iti/formal/automation")
}

processResources.dependsOn createVersionFile