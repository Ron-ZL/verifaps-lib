# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: wadoon/verifaps-test:latest
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.caching=true -Dorg.gradle.parallel=false
      TERM: dumb
    steps:
      - checkout
      - run: javac -version
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle" }}
            - gradle-repo-v1-{{ .Branch }}-
            - gradle-repo-v1-

      - run: gradle dependencies
      - run: gradle classes
      - run: gradle testClasses

      - save_cache:
          paths:
            - ~/.gradle
            - "*/build"
            - build
            - .gradle
          key: gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle" }}

  test:
    docker:
      - image: wadoon/verifaps-test:latest
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.caching=true -Dorg.gradle.parallel=false
      TERM: dumb
    steps:
      - checkout
      - run:
          name: "Versions"
          command: |
            javac -version
            z3 -version
            echo $(echo "quit" | nuXmv -int | head -n 1)

      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle" }}
            - gradle-repo-v1-{{ .Branch }}-
            - gradle-repo-v1-

      - run: gradle --continue --build-cache check

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

  integration-tests:
    docker:
      - image: wadoon/verifaps-test:latest
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.caching=true -Dorg.gradle.parallel=false
      TERM: dumb
    steps:
      - checkout
      - run:
          name: "Versions"
          command: |
            javac -version
            z3 -version
            echo $(echo "quit" | nuXmv -int | head -n 1)

      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle" }}
            - gradle-repo-v1-{{ .Branch }}-
            - gradle-repo-v1-

      - run: gradle --build-cache --info :ide:assembleDist

      - run:
          name: Integration Tests
          command: |
            which nuXmv
            which z3
            sh -x share/integration-tests.sh


      - store_artifacts:
          path: ide/build/distributions/*

  deploy:
    docker:
      - image: wadoon/verifaps-test:latest
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: "Versions"
          command: |
            javac -version
            z3 -version
            echo $(echo "quit" | nuXmv -int | head -n 1)

      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle" }}
            - gradle-repo-v1-{{ .Branch }}-
            - gradle-repo-v1-


workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - integration-tests:
          requires:
            - build
      - deploy:
          type: approval # <<< This key-value pair will set your workflow to a status of "On Hold"
          requires:
            - test
            - integration-tests
